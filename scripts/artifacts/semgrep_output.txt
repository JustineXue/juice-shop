               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 223 files tracked by git with 345 Code rules:
                                                                                                                        
  Language      Rules   Files          Origin      Rules                                                                
 ─────────────────────────────        ───────────────────                                                               
  <multilang>       4     223          Community     345                                                                
  ts               33      85                                                                                           
  yaml              7      51                                                                                           
  json              1      43                                                                                           
  solidity         16      17                                                                                           
                                                                                                                        
                   
                   
┌─────────────────┐
│ 4 Code Findings │
└─────────────────┘
                                                
    data/static/codefixes/dbSchemaChallenge_1.ts
   ❯❯❱ javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection
          Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if   
          the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it
          is recommended to use parameterized queries or prepared statements.                                 
          Details: https://sg.run/gjoe                                                                        
                                                                                                              
            5┆ models.sequelize.query("SELECT * FROM Products WHERE ((name LIKE '%"+criteria+"%' OR
               description LIKE '%"+criteria+"%') AND deletedAt IS NULL) ORDER BY name")           
                                                
    data/static/codefixes/dbSchemaChallenge_3.ts
   ❯❯❱ javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection
          Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if   
          the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it
          is recommended to use parameterized queries or prepared statements.                                 
          Details: https://sg.run/gjoe                                                                        
                                                                                                              
           11┆ models.sequelize.query(`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR
               description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name`)           
                                                         
    data/static/codefixes/unionSqlInjectionChallenge_1.ts
   ❯❯❱ javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection
          Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if   
          the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it
          is recommended to use parameterized queries or prepared statements.                                 
          Details: https://sg.run/gjoe                                                                        
                                                                                                              
            6┆ models.sequelize.query(`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR
               description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name`)           
                                                         
    data/static/codefixes/unionSqlInjectionChallenge_3.ts
   ❯❯❱ javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection
          Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if   
          the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it
          is recommended to use parameterized queries or prepared statements.                                 
          Details: https://sg.run/gjoe                                                                        
                                                                                                              
           10┆ models.sequelize.query(`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR
               description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name`)           

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘
✅ Scan completed successfully.
 • Findings: 4 (4 blocking)
 • Rules run: 61
 • Targets scanned: 223
 • Parsed lines: ~99.9%
 • Scan skipped: 
   ◦ Files larger than  files 1.0 MB: 2
 • Scan was limited to files tracked by git
 • For a detailed list of skipped files and lines, run semgrep with the --verbose flag
Ran 61 rules on 223 files: 4 findings.
